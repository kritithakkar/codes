method -1 (linear search)
#include<iostream>
#include<stdlib.h>
using namespace std;
int countRotations(int arr[], int n) 
{ 
    int min = arr[0], min_index; 
    for (int i=0; i<n; i++) 
    { 
        if (min > arr[i]) 
        { 
            min = arr[i]; 
            min_index = i; 
        } 
    } 
    return min_index; 
} 
int main(int argc,char *argv[])
{
int arr[argc],z=0;
for(int i=1;i<argc;i++)
{
arr[z++]=atoi(argv[i]);
}
cout<<countRotations(arr,z);
return 0;
}

                                           OR
method -2 (binary search)
#include<iostream>
#include<stdlib.h>
using namespace std; 
int countRotations(int arr[],int low,int high) 
{ 
  if (low>high)
  return 0;
  if (low==high)
 return low;
 int mid=low + (high-low)/2;
 if(mid<high && arr[mid+1]<arr[mid])
 return mid+1;
 if(mid>low && arr[mid]<arr[mid-1])
 return mid;
 if (arr[high] > arr[mid]) 
       return countRotations(arr, low, mid-1); 
  
    return countRotations(arr, mid+1, high); 
}
int main(int argc,char *argv[]) 
{ 
int arr[argc],z=0;
for(int i=1;i<argc;i++)
{
    arr[z++]=atoi(argv[i]);
}
    cout << countRotations(arr,0, z-1); 
    return 0; 
} 
                     
